{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAutheticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4ed73b1.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventStartAddNew: '[Event] Start Add New',\r\n    eventAddNew: '[Event] Add New',\r\n    eventSetActive: '[Event] Set Active',\r\n    eventClearActiveEvent: '[Event] Clear Active Event',\r\n    eventUpdated: '[Event] Event Updated',\r\n    eventDeleted: '[Event] Event Deleted',\r\n    eventLoaded: '[Event] Events Loaded',\r\n    eventLogout: '[Event] Events Logout',\r\n\r\n    authCheckingFinish: '[Auth] Finish Checking Login State',\r\n    authStartLogin: '[Auth] Start Login',\r\n    authLogin: '[Auth] Login',\r\n    authStartRegister: '[Auth] Start Register',\r\n    authStartTokenRenew: '[Auth] Start Token Renew',\r\n    authLogout: '[Auth] Logout'\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = (events) => {\r\n\r\n    \r\n\r\n    return events.map(\r\n            (e) => ({\r\n                ...e,\r\n                end: moment(e.end).toDate(),\r\n                start: moment(e.start).toDate()\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    \r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);  \r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);  \r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async(dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);  \r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type:types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    \r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'email123@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'messi',\r\n        rEmail: 'messi@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas debes de ser iguales', 'error')\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name} </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={ dateEnd }\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { useEffect } from 'react';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);        \r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id) ? '#367CF7' : '#B61D1D',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            \r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({\r\n    isAutheticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAutheticated)\r\n                    ? <Component { ...props } />\r\n                    : ( <Redirect to=\"/login\" />)\r\n            )} \r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAutheticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({\r\n    isAutheticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAutheticated)\r\n                    ? ( <Redirect to=\"/\" />)\r\n                    : <Component { ...props } />\r\n            )} \r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAutheticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (<h5>Cargando...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen} \r\n                        isAutheticated={!!uid}\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={CalendarScreen} \r\n                        isAutheticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Alvaro'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== action.activeEvent.id) \r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}